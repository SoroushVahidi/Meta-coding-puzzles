# Write any import statements here
import ctypes
def getUniformIntegerCountInInterval(A: int, B: int) -> int:
  # Write your code here
  a=str(A)
  b=(str(B))


  print(a)

  for i in range(1,len(a)):
    if(a[i]<a[i-1]):
      ls=list(a)
      for j in range(len(ls)):
        ls[j]=ls[i-1]
        a="".join(ls)
        A=int(a)
      break
    elif a[i]>a[i-1]:
        ls=[]
        ls=list(a)
        nw=chr(ord(ls[i-1])+1)
        for j in range(len(ls)):
          ls[j]=nw
        a="".join(ls)
        A=int(a)
        break


  for i in range(1,len(b)):
      if(b[i]<b[i-1]):
        if(ord(b[i-1])-ord('0')>1):
          ls=list(b)
          nw=chr(ord(ls[i-1])-1)
          for j in range(len(ls)):
            ls[j]=nw
      
          b="".join(ls)
          B=int(b)
          break
        else:
          ls=list(b)
          
          ls[0]='0'
          for j in range(1,len(b)):
            ls[j]='9'
          b="".join(ls)
          B=int(b)
          break
       
      elif b[i]>b[i-1]:
        ls=list(b)
        
        for j in range(len(ls)):
          ls[j]=b[i-1]
        b="".join(ls)
        B=int(b)
        break
  ans=9-(ord(a[0])-ord('0'))+1+(ord(b[0])-ord('0'))+(len(b)-len(a)-1)*9
  if(len(a)==(len(b))):
    ans=int(b[0])-int(a[0])+1
#  print(a,b)  
  return ans
